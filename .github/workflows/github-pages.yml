name: Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          
      - name: Install Dependencies
        run: cd app && npm ci
        
<<<<<<< HEAD
=======
          
>>>>>>> refs/remotes/origin/main
      - name: Prepare App for GitHub Pages
        run: |
          cd app
          
          # Create App.tsx for GitHub Pages with HashRouter
          cat > client/src/App.tsx << 'EOL'
          import { useState, useEffect } from 'react';
          import { Switch, Route } from 'wouter';
          import { Toaster } from '@/components/ui/toaster';
          
          // Pages
          import Home from '@/pages/Home';
          import RPNPage from '@/pages/RPNPage';
          import TreePage from '@/pages/TreePage';
          import NotFound from '@/pages/not-found';
          
          // HashRouter wrapper for GitHub Pages
          function useHashLocation() {
            const [location, setLocation] = useState(
              window.location.hash ? window.location.hash.replace("#", "") : "/"
            );
          
            useEffect(() => {
              // Handle hash change and remove the # from the location
              const handleHashChange = () => {
                const hash = window.location.hash || "#/";
                setLocation(hash.replace("#", ""));
              };
          
              window.addEventListener("hashchange", handleHashChange);
              handleHashChange(); // Handle initial hash
              return () => window.removeEventListener("hashchange", handleHashChange);
            }, []);
          
            // Replace history functions to work with hash
            const navigate = (to: string) => {
              window.location.hash = to;
            };
          
            return [location, navigate];
          }
          
          function Router() {
            // eslint-disable-next-line @typescript-eslint/no-unused-vars
            const [location, navigate] = useHashLocation();
            
            return (
              <Switch location={location}>
                <Route path="/" component={Home} />
                <Route path="/rpn" component={RPNPage} />
                <Route path="/tree" component={TreePage} />
                <Route component={NotFound} />
              </Switch>
            );
          }
          
          function App() {
            return (
              <div className="min-h-screen bg-background">
                <Router />
                <Toaster />
              </div>
            );
          }
          
          export default App;
          EOL
          
      - name: Build Frontend
        run: |
          cd app
          node --input-type=module build-static.js
        
      - name: Copy 404.html to dist
        run: cp 404.html dist/
        
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
          branch: gh-pages
